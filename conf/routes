# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index
# An example controller showing how to use dependency injection
GET     /count                      controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                    controllers.AsyncController.message

# View
GET     /login                      controllers.LoginController.viewLogin

GET     /assets                     controllers.AssetsController.viewAssets(page: Int ?= 1)
GET     /assets/insert              controllers.AssetsController.viewInsertAssets
GET     /assets/import              controllers.AssetsController.viewImportAssets
GET     /assets/import/template     controllers.AssetsController.viewTemplateAssetFile
GET     /assets/:id                 controllers.AssetsController.viewDetailAssets(id: String, page: Int ?= 1)
GET     /assets/edit/:id            controllers.AssetsController.viewEditAssets(id: String, page: Int ?= 1)

+ nocsrf
POST    /asset/insert               controllers.AssetsController.insertAssets
+ nocsrf
POST    /asset/edit                 controllers.AssetsController.editAssets
+ nocsrf
POST    /asset/upload               controllers.AssetsController.uploadAssets
GET     /asset/search-barcode       controllers.AssetsController.searchOrPrintBarcode(search: models.BikeSearch, page: Int ?= 1)

+ nocsrf
POST    /login                      controllers.LoginController.doLogin
GET    /logout                     controllers.LoginController.doLogout

GET     /stations                   controllers.StationController.viewStations(name: Option[String] ?= None, availableAsset: Option[String] ?= None, page: Int ?= 1)
+ nocsrf
POST    /stations                   controllers.StationController.filterStationAction
GET     /stations/add               controllers.StationController.viewAddStation
GET     /payments                   controllers.PaymentController.getPayments(studentId: Option[String] ?= None, firstName: Option[String] ?= None, lastName: Option[String] ?= None, major: Option[String] ?= None, page: Int ?= 1, pageSize: Int ?= 10)
+ nocsrf
POST    /payments                   controllers.PaymentController.filterPaymentAction

GET     /reports                    controllers.ReportController.viewReport
GET     /assets/status/report       controllers.ReportController.viewAssetReport
GET     /time/usage/report          controllers.ReportController.viewTimeUsageReport

GET     /users/insert               controllers.StudentController.viewInsertUser
GET     /users/edit/:id             controllers.StudentController.viewEditUser(id: String)
+ nocsrf
POST    /users/insert               controllers.StudentController.insertUser
+ nocsrf
POST    /users/edit/:id             controllers.StudentController.editUser(id: String)
+ nocsrf
POST     /time/usage/report         controllers.ReportController.searchTimeUsageReport

# API
GET     /api/history/:id           controllers.api.PaymentController.getPayment(id: String)
+ nocsrf
POST    /api/payments               controllers.api.PaymentController.createTransaction

+ nocsrf
POST    /api/bikes/borrow           controllers.api.BikeController.borrowBike
+ nocsrf
POST    /api/bikes/return           controllers.api.BikeController.returnBike

GET     /api/bikes/stations/:sId    controllers.api.BikeController.getBikesByStationId(sId: Int)

GET     /api/fine/:studentId        controllers.api.HistoryController.getStudentFine(studentId: String)

+ nocsrf
POST    /stations/add               controllers.StationController.addStation

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(file)

# APIs for mobile
GET     /api/stations               controllers.api.StationController.getStations
+ nocsrf
POST    /api/stations               controllers.api.StationController.loginStations

GET     /api/bikes/total            controllers.api.BikeController.getBikeTotal(status: Option[Int] ?= None)
GET     /api/bikes/barcodes/:id     controllers.api.BikeController.getBikesByBarcodeId(id: String)
GET     /api/bikes/barcodes/:id/borrow controllers.api.BikeController.getBikesByBarcodeId(id: String)
GET     /api/bikes/barcodes/:id/return controllers.api.BikeController.getReturnBikeByBarcodeId(id: String)

+ nocsrf
POST    /api/bikes/repair           controllers.api.BikeController.sendToRepair
+ nocsrf
POST    /api/bikes/repair/return    controllers.api.BikeController.repairReturnBike

GET     /api/students/:id           controllers.api.StudentController.getStudentsByStudentId(id: String)

GET     /api/reports/popularity     controllers.api.HistoryController.getPopularityChart(startDate: Option[Long] ?= None, endDate: Option[Long] ?= None)
GET     /reports/popularity         controllers.HistoryController.viewPopularityChart(startDate: Option[Long] ?= None, endDate: Option[Long] ?= None)
+ nocsrf
POST    /reports/popularity         controllers.HistoryController.filterViewPopularityAction

GET     /numberofusage/report       controllers.HistoryController.viewNumberOfUsageTable(startDate: Option[Long] ?= None, endDate: Option[Long] ?= None,page: Int ?= 1, size: Int ?= 10)
+ nocsrf
POST    /numberofusage/report       controllers.HistoryController.filterViewUsageTableAction